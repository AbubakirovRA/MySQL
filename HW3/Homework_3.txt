1. Напишите запрос, который вывел бы таблицу со столбцами в следующем порядке: city, sname, snum, comm. 
(к первой или второй таблице, используя SELECT)

mysql> select city, sname, snum, comm
    -> from SalePeople;
+-----------+---------+------+------+
| city      | sname   | snum | comm |
+-----------+---------+------+------+
| London    | Peel    | 1001 | .12  |
| San Jose  | Serres  | 1002 | .13  |
| London    | Motika  | 1004 | .11  |
| Barselona | Rifkin  | 1007 | .15  |
| New York  | Axelrod | 1003 | .10  |
+-----------+---------+------+------+
5 rows in set (0.00 sec)

1_1. 1. Напишите запрос, который сосчитал бы все суммы заказов, выполненных 1 января 2016 года.

Решение:
Так как в задании даты в условии и даты в таблице Orders не соответствуют, в запросе укажу дату 10/03/1990:

mysql> select sum(amt)
    -> from Orders
    -> where
    -> odate = '10/03/1990';
+----------+
| sum(amt) |
+----------+
|  8944.59 |
+----------+
1 row in set (0.07 sec)

2. Напишите команду SELECT, которая вывела бы оценку(rating), сопровождаемую именем каждого заказчика в городе San Jose. 
(“заказчики”)

mysql> select cname, rating
    -> from Customers
    -> where city = 'SanJose';
+----------+--------+
| cname    | rating |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+
2 rows in set (0.00 sec)

2_1. Напишите запрос, который сосчитал бы число различных, отличных от NULL значений поля city в таблице заказчиков.

mysql> select count(city)
    -> from Customers
    -> where city != null;
+-------------+
| count(city) |
+-------------+
|           0 |
+-------------+
1 row in set (0.00 sec)

3. Напишите запрос, который вывел бы значения snum всех продавцов из таблицы заказов без каких бы то ни было повторений. 
(уникальные значения в  “snum“ “Продавцы”)

mysql> select distinct snum
    -> from SalePeople
    -> order by snum;
+------+
| snum |
+------+
| 1001 |
| 1002 |
| 1003 |
| 1004 |
| 1007 |
+------+
5 rows in set (0.00 sec)

3_1. Напишите запрос, который выбрал бы наименьшую сумму для каждого заказчика.

mysql> select Customers.cname, Customers.city, Orders.odate, Orders.amt
    -> from Customers inner join Orders on Customers.cnum = Orders.cnum
    -> group by Customers.cname
    -> having (min(amt))
    -> order by Customers.cname;
+----------+---------+------------+---------+
| cname    | city    | odate      | amt     |
+----------+---------+------------+---------+
| Cisneros | SanJose | 10/03/1990 |   18.69 |
| Clemens  | London  | 10/05/1990 | 4723.00 |
| Giovanni | Rome    | 10/04/1990 | 1713.23 |
| Grass    | Berlin  | 10/04/1990 |   75.75 |
| Hoffman  | London  | 10/03/1990 |  767.19 |
| Liu      | SanJose | 10/03/1990 | 5160.45 |
| Pereira  | Rome    | 10/03/1990 | 1900.10 |
+----------+---------+------------+---------+
7 rows in set (0.00 sec)

4*. 	Напишите запрос, который бы выбирал заказчиков, чьи имена начинаются с буквы G. 
Используется оператор "LIKE": (“заказчики”)

mysql> select cname
    -> from Customers
    -> where cname like 'G%';
+----------+
| cname    |
+----------+
| Giovanni |
| Grass    |
+----------+
2 rows in set (0.00 sec)

5. Напишите запрос, который может дать вам все заказы со значениями суммы выше чем $1,000. 
(“Заказы”, “amt”  - сумма)

mysql> select *
    -> from Orders
    -> where amt > 1000.00;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 10/03/1990 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/1990 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/1990 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/1990 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/1990 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/1990 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/1990 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.00 sec)

5_1. 5. Напишите запрос, который выбрал бы высший рейтинг в каждом городе.

mysql> select city,
    -> max(rating) as max_rating
    -> from Customers
    -> group by city
    -> order by city;
+---------+------------+
| city    | max_rating |
+---------+------------+
| Berlin  |        300 |
| London  |        100 |
| Rome    |        200 |
| SanJose |        300 |
+---------+------------+
4 rows in set (0.00 sec)

6.Напишите запрос который выбрал бы наименьшую сумму заказа.
 (Из поля “amt” - сумма в таблице “Заказы” выбрать наименьшее значение)

mysql> select onum, min(amt), odate, cnum, snum
    -> from Orders;
+------+----------+------------+------+------+
| onum | min(amt) | odate      | cnum | snum |
+------+----------+------------+------+------+
| 3001 |    18.69 | 10/03/1990 | 2008 | 1007 |
+------+----------+------------+------+------+
1 row in set (0.00 sec)

7. Напишите запрос к таблице “Заказчики”, который может показать всех заказчиков, 
у которых рейтинг больше 100 и они находятся не в Риме.

mysql> select *
    -> from Customers
    -> where rating > 100 and city != 'Rome';
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
3 rows in set (0.00 sec)

Задание №2
2_1 Отсортируйте поле “зарплата” в порядке убывания и возрастания

mysql> select *
    -> from salary
    -> order by salary;
+----+--------+----------+------------+-----------+--------+-----+
| id | name   | surname  | speciality | seniority | salary | age |
+----+--------+----------+------------+-----------+--------+-----+
| 12 | Люся   | Люськина | уборщик    |        10 |  10000 |  49 |
| 10 | Максим | Воронин  | рабочий    |         2 |  11000 |  22 |
| 11 | Юра    | Галкин   | рабочий    |         3 |  12000 |  24 |
|  9 | Юра    | Юркин    | рабочий    |         5 |  15000 |  25 |
|  8 | Антон  | Антонов  | рабочий    |         8 |  19000 |  28 |
|  7 | Сидор  | Сидоров  | рабочий    |        10 |  20000 |  35 |
|  6 | Петр   | Петров   | рабочий    |        20 |  25000 |  40 |
|  5 | Иван   | Иванов   | рабочий    |        40 |  30000 |  59 |
|  4 | Саша   | Сашкин   | инженер    |        12 |  50000 |  35 |
|  2 | Петя   | Петькин  | начальник  |         8 |  70000 |  30 |
|  3 | Катя   | Каткина  | инженер    |         2 |  70000 |  25 |
|  1 | Вася   | Васькин  | начальник  |        40 | 100000 |  60 |
+----+--------+----------+------------+-----------+--------+-----+
12 rows in set (0.00 sec)

mysql> select *
    -> from salary
    -> order by salary desc;
+----+--------+----------+------------+-----------+--------+-----+
| id | name   | surname  | speciality | seniority | salary | age |
+----+--------+----------+------------+-----------+--------+-----+
|  1 | Вася   | Васькин  | начальник  |        40 | 100000 |  60 |
|  2 | Петя   | Петькин  | начальник  |         8 |  70000 |  30 |
|  3 | Катя   | Каткина  | инженер    |         2 |  70000 |  25 |
|  4 | Саша   | Сашкин   | инженер    |        12 |  50000 |  35 |
|  5 | Иван   | Иванов   | рабочий    |        40 |  30000 |  59 |
|  6 | Петр   | Петров   | рабочий    |        20 |  25000 |  40 |
|  7 | Сидор  | Сидоров  | рабочий    |        10 |  20000 |  35 |
|  8 | Антон  | Антонов  | рабочий    |         8 |  19000 |  28 |
|  9 | Юра    | Юркин    | рабочий    |         5 |  15000 |  25 |
| 11 | Юра    | Галкин   | рабочий    |         3 |  12000 |  24 |
| 10 | Максим | Воронин  | рабочий    |         2 |  11000 |  22 |
| 12 | Люся   | Люськина | уборщик    |        10 |  10000 |  49 |
+----+--------+----------+------------+-----------+--------+-----+
12 rows in set (0.00 sec)

2_2 Отсортируйте по возрастанию поле “Зарплата” и выведите 5 строк с наибольшей заработной платой 

mysql> select *
    -> from salary
    -> order by salary
    -> limit 7, 5;
+----+------+---------+------------+-----------+--------+-----+
| id | name | surname | speciality | seniority | salary | age |
+----+------+---------+------------+-----------+--------+-----+
|  5 | Иван | Иванов  | рабочий    |        40 |  30000 |  59 |
|  4 | Саша | Сашкин  | инженер    |        12 |  50000 |  35 |
|  2 | Петя | Петькин | начальник  |         8 |  70000 |  30 |
|  3 | Катя | Каткина | инженер    |         2 |  70000 |  25 |
|  1 | Вася | Васькин | начальник  |        40 | 100000 |  60 |
+----+------+---------+------------+-----------+--------+-----+
5 rows in set (0.00 sec)

2_3 Выполните группировку всех сотрудников по специальности , суммарная зарплата которых превышает 100000

mysql> select speciality, sum(salary)
    -> from salary
    -> group by speciality
    -> having (sum(salary) > 100000);
+------------+-------------+
| speciality | sum(salary) |
+------------+-------------+
| начальник  |      170000 |
| инженер    |      120000 |
| рабочий    |      132000 |
+------------+-------------+
3 rows in set (0.00 sec)